//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServicesClient.PuzzleUService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserData", Namespace="http://schemas.datacontract.org/2004/07/PuzzleUServices")]
    [System.SerializableAttribute()]
    public partial class UserData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumData", Namespace="http://schemas.datacontract.org/2004/07/PuzzleUServices")]
    [System.SerializableAttribute()]
    public partial class AlbumData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageFileData", Namespace="http://schemas.datacontract.org/2004/07/PuzzleUServices")]
    [System.SerializableAttribute()]
    public partial class ImageFileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageStreamField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFormat {
            get {
                return this.ImageFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFormatField, value) != true)) {
                    this.ImageFormatField = value;
                    this.RaisePropertyChanged("ImageFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageStream {
            get {
                return this.ImageStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageStreamField, value) != true)) {
                    this.ImageStreamField = value;
                    this.RaisePropertyChanged("ImageStream");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PuzzleUService.IPuzzleUService")]
    public interface IPuzzleUService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/CreateUser", ReplyAction="http://tempuri.org/IPuzzleUService/CreateUserResponse")]
        bool CreateUser(out int id, out string errorString, string sUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/GetUserID", ReplyAction="http://tempuri.org/IPuzzleUService/GetUserIDResponse")]
        bool GetUserID(out int id, out string errorString, string sUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/DeleteUser", ReplyAction="http://tempuri.org/IPuzzleUService/DeleteUserResponse")]
        bool DeleteUser(out string errorString, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/GetUsersData", ReplyAction="http://tempuri.org/IPuzzleUService/GetUsersDataResponse")]
        bool GetUsersData(out ServicesClient.PuzzleUService.UserData[] users, out string errorString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/CreateAlbum", ReplyAction="http://tempuri.org/IPuzzleUService/CreateAlbumResponse")]
        bool CreateAlbum(out int albumId, out string errorString, int userId, string albumName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/DeleteAlbum", ReplyAction="http://tempuri.org/IPuzzleUService/DeleteAlbumResponse")]
        bool DeleteAlbum(out string errorString, int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/GetAlbumID", ReplyAction="http://tempuri.org/IPuzzleUService/GetAlbumIDResponse")]
        bool GetAlbumID(out int albumId, out string errorString, int userId, string albumName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/GetAlbumIDs", ReplyAction="http://tempuri.org/IPuzzleUService/GetAlbumIDsResponse")]
        bool GetAlbumIDs(out int[] albumIds, out string errorString, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/GetAlbumsData", ReplyAction="http://tempuri.org/IPuzzleUService/GetAlbumsDataResponse")]
        bool GetAlbumsData(out ServicesClient.PuzzleUService.AlbumData[] albums, out string errorString, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleUService/AddImage", ReplyAction="http://tempuri.org/IPuzzleUService/AddImageResponse")]
        bool AddImage(out string errorString, int albumId, ServicesClient.PuzzleUService.ImageFileData imageFileData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPuzzleUServiceChannel : ServicesClient.PuzzleUService.IPuzzleUService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PuzzleUServiceClient : System.ServiceModel.ClientBase<ServicesClient.PuzzleUService.IPuzzleUService>, ServicesClient.PuzzleUService.IPuzzleUService {
        
        public PuzzleUServiceClient() {
        }
        
        public PuzzleUServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PuzzleUServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PuzzleUServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PuzzleUServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateUser(out int id, out string errorString, string sUserName) {
            return base.Channel.CreateUser(out id, out errorString, sUserName);
        }
        
        public bool GetUserID(out int id, out string errorString, string sUserName) {
            return base.Channel.GetUserID(out id, out errorString, sUserName);
        }
        
        public bool DeleteUser(out string errorString, int id) {
            return base.Channel.DeleteUser(out errorString, id);
        }
        
        public bool GetUsersData(out ServicesClient.PuzzleUService.UserData[] users, out string errorString) {
            return base.Channel.GetUsersData(out users, out errorString);
        }
        
        public bool CreateAlbum(out int albumId, out string errorString, int userId, string albumName) {
            return base.Channel.CreateAlbum(out albumId, out errorString, userId, albumName);
        }
        
        public bool DeleteAlbum(out string errorString, int albumId) {
            return base.Channel.DeleteAlbum(out errorString, albumId);
        }
        
        public bool GetAlbumID(out int albumId, out string errorString, int userId, string albumName) {
            return base.Channel.GetAlbumID(out albumId, out errorString, userId, albumName);
        }
        
        public bool GetAlbumIDs(out int[] albumIds, out string errorString, int userId) {
            return base.Channel.GetAlbumIDs(out albumIds, out errorString, userId);
        }
        
        public bool GetAlbumsData(out ServicesClient.PuzzleUService.AlbumData[] albums, out string errorString, int userId) {
            return base.Channel.GetAlbumsData(out albums, out errorString, userId);
        }
        
        public bool AddImage(out string errorString, int albumId, ServicesClient.PuzzleUService.ImageFileData imageFileData) {
            return base.Channel.AddImage(out errorString, albumId, imageFileData);
        }
    }
}
